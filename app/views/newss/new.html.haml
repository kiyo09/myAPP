.container
  %br/
  %h3 Qiita投稿一覧取得
  %br/
  .input-group
    .input-group-prepend
      %span#addon-wrapping.input-group-text Qiita アクセストークンの設定
    %input#accesstoken.form-control{"aria-describedby" => "addon-wrapping", :placeholder => "Access Token", :type => "text"}/
    %br/
    %button.btn.btn-primary{:onclick => "getData()", :type => "button"} 読み込み
    %hr/
  #result

:javascript
  var title;
  var view;
  var like;
  var stock;

  function getData() {
    // アクセストークンの確認
    var token = document.getElementById('accesstoken').value
    if(token == ''){
      alert('アクセストークンを入れてください')
      return
    }

    // 取得できるまで表示
    var result = $("#result");
    var loading = '<p>Now Loading...</p>';
    result.append(loading);

    // 自分の投稿一覧を取得して、id別にデータを取得する
    var items = [];
    $.ajax({
      type: "GET",
      url: "https://qiita.com/api/v2/authenticated_user/items",
      headers: {
        "Content-Type": "application/json",
        "Authorization": "Bearer " + token,
      },
      dataType: "json",
      success: function(data){
        items = data;

        var sum_view = 0;
        var sum_like = 0;
        var sum_stock = 0;

        var html = '<table class="table table-dark">' +
                  '<thead><tr><th scope="col">No</th><th scope="col">タイトル</th><th scope="col">VIEWS</th><th scope="col">LIKES</th><th scope="col">STOCKS</th><th scope="col">LIKE率</th><th scope="col">STOCK率</th></tr></thead><tbody>'

        // 投稿一覧をループして、ID別にデータを取得、HTMLを設定
        for (var i = 0; i < items.length; i++) {
          qiitaView(items[i].id, token);
          qiitaStock(items[i].id, token);

          var no = items.length - i;

          var per_like = like / view * 1000;
          var math_like = Math.round(per_like) / 1000;

          var per_stock = stock / view * 1000;
          var math_stock = Math.round(per_stock) / 1000;

          html +=
          '<tr>' +
          '<th scope="row">' + no + '</th>' +
          '<td><a href="' + url + '" target="_blank">' + title + '</a></td>' +
          '<td>' + view + '</td>' +
          '<td>' + like + '</td>' +
          '<td>' + stock + '</td>' +
          '<td>' + math_like + '</td>' +
          '<td>' + math_stock + '</td>' +
          '</tr>';

          sum_view += view;
          sum_like += like;
          sum_stock += stock;

        };

        // html に合計を設定し、書き出し
        html +=
          '<tr>' +
          '<th scope="row">計</th>' +
          '<td></td>' +
          '<td>' + sum_view + '</td>' +
          '<td>' + sum_like + '</td>' +
          '<td>' + sum_stock + '</td>' +
          '<td>' + '' + '</td>' +
          '<td>' + '' + '</td>' +
          '</tr>' +
          '</tbody></table>';

        result.empty();
        result.append(html);

      },
      error: function(XMLHttpRequest, textStatus, errorThrown){
        result.empty();
        alert('Error1 : アクセストークンあっていますか？' + errorThrown);
      }
    });

  };

  function qiitaView(id, token) {

    var views = [];

    $.ajax({
      type: "GET",
      url: 'https://qiita.com/api/v2/items/' + id,
      headers: {
        "Content-Type": "application/json",
        "Authorization": "Bearer " + token,
      },
      dataType: "json",
      async: false,      // 同期通信
      success: function(data){
        views = data;
        title = views.title;
        url = views.url;
        like = views.likes_count;
        view = views.page_views_count;
      },
      error: function(XMLHttpRequest, textStatus, errorThrown){
        alert('Error2 : ' + errorThrown);
      }
    });

  };

  function qiitaStock(id, token) {

    var stocks = [];
    var flg = 'off';

    for (var j = 1; j < 4; j++) {

      $.ajax({
        type: "GET",
        url: 'https://qiita.com/api/v2/items/' + id + '/stockers?page=' + j + '&per_page=100',
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer " + token,
        },
        dataType: "json",
        async: false,        // 同期通信
        success: function(data){
          stocks = data;
          var stock_len = stocks.length;

          if (stock_len != 100) {
            stock = (j * 100) - 100 + stock_len;
            flg = 'on';
          }

        },
        error: function(XMLHttpRequest, textStatus, errorThrown){
          alert('Error3 : ' + errorThrown);
        }
      });

      if (flg=='on') {
        break;
      }

    };
  };

